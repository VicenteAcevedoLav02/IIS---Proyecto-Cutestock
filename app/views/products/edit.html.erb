<h1 class="text-center">Editing product <%= @product.id %> for <%= @business.name %></h1>

<%= form_with model: @product, url: product_path(@product), method: :patch, local: true do |form| %>
  <div class="form-group">
    <%= form.label :name, "Product Name" %>
    <%= form.text_field :name, class: "form-control mb-3", value: @product.name, required: true %>
  </div>

  <div class="form-group">
    <%= form.label :price, "Price" %>
    <%= form.number_field :price, class: "form-control mb-3", step: "0.01", value: @product.price, required: true, min: 0 %>
  </div>

  <div id="supply-fields" class="mb-3">
    <% @product.supplies.each do |supply| %>
      <div class="supply-field row align-items-center mb-2">
        <div class="col-md-8">
          <label for="supply_name">Supply Name</label>
          <%= select_tag "supply_name[]", options_from_collection_for_select(@supplies, :name, :name, selected: supply.name), class: "form-control" %>
        </div>
        <div class="col-md-4 text-center">
          <button type="button" class="btn btn-danger remove-supply">&#10006;</button>
        </div>
      </div>
    <% end %>
  </div>

  <button type="button" class="btn btn-dark" id="add-supply">Add Supply</button>
  <br><br>
  <%= form.submit "Update Product", class: "btn btn-dark" %>
<% end %>

<script>
  function updateRemoveButtonState() {
    const removeButtons = document.querySelectorAll(".remove-supply");
    const supplyFields = document.querySelectorAll(".supply-field");

    // Enable/disable remove buttons based on the number of supply fields
    removeButtons.forEach(button => {
      const supplyFieldCount = supplyFields.length;
      button.disabled = supplyFieldCount <= 1;  // Disable remove button if only one field is left
    });
  }

  // Event listener for the 'Add Supply' button
  document.getElementById("add-supply").addEventListener("click", function() {
    const supplyFields = document.getElementById("supply-fields");
    const newSupplyField = document.createElement("div");
    newSupplyField.className = "supply-field row align-items-center mb-2";
    newSupplyField.innerHTML = `
      <div class="col-md-8">
        <label for="supply_name">Supply Name</label>
        <select name="supply_name[]" class="form-control">
          <option value="">Select a supply</option>
          <%= options_for_select(@supplies.map { |s| [s.name, s.name] }) %>
        </select>
      </div>
      <div class="col-md-4 text-center">
        <button type="button" class="btn btn-danger remove-supply">&#10006;</button>
      </div>
    `;
    supplyFields.appendChild(newSupplyField);
    updateRemoveButtonState(); // Update the state of remove buttons
  });

  // Event listener for removing a supply field
  document.getElementById("supply-fields").addEventListener("click", function(event) {
    if (event.target.classList.contains("remove-supply")) {
      event.target.closest(".supply-field").remove();
      updateRemoveButtonState(); // Update the state of remove buttons after removing a field
    }
  });

  // Check remove button state on page load
  document.addEventListener("DOMContentLoaded", updateRemoveButtonState);
</script>
